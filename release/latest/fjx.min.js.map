{"version":3,"file":"fjx.min.js","sources":["../src/consts.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../src/array/asyncArray.ts","../src/utils.ts","../src/array/array.ts","../src/object/object.ts","../src/object/asyncObject.ts","../src/iterable/iterable.ts","../src/iterable/asyncIterable.ts"],"sourcesContent":["/**\n * @namespace Consts\n */\n\n/**\n* @memberof Consts\n*/\nexport const IS_SYMBOL = typeof Symbol !== \"undefined\";\n\n/**\n* @memberof Consts\n*/\nexport const IS_PROMISE = typeof Promise !== \"undefined\";\n\n/**\n* @memberof Consts\n*/\nexport const nop = Symbol(\"nop\");\n","/*\nCopyright (c) 2018 Daybrush\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.4.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (typeof document === UNDEFINED) {\n    return \"\";\n  }\n\n  var styles = (document.body || document.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {string} hex - hex color\n* @return {string} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {String} hex - 3(or 4)-digit hex color\n* @return {String} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {Array} hsl(a) - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {Array} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {String} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {Array} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * @namespace DOM\n */\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param {HTMLElement | HTMLElement[]} elements - elements\n* @param {string[]} properites - the CSS properties\n* @return {object} returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","import { ReduceArrayCallbackType, EachArrayCallbackType, filterArrayF, eachArrayF, takeArrayF } from \"./array\";\nimport { CheckPromiseIterableType, CheckPromiseReturnType, CheckIterableType} from \"../types\";\nimport { reduceArrayF, mapArrayF } from \"./array\";\nimport { exec, curry } from \"../utils\";\n\n/**\n * @namespace asyncArray\n */\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type ReduceAsyncArrayCallbackType<T, U extends any[]> =\n  ReduceArrayCallbackType<T, CheckPromiseIterableType<U>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type EachAsyncArrayCallbackType<T extends any[], U> =\n  EachArrayCallbackType<CheckPromiseIterableType<T>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type AsyncArrayReturnType<T extends any[], U> =\n  CheckPromiseReturnType<CheckIterableType<T>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type PureArrayType<T extends any[]> =\n  Array<CheckPromiseIterableType<T>>;\n\nexport function syncArray<T extends any[]>(arr: T):\n  AsyncArrayReturnType<T, PureArrayType<T>>;\n/**\n * @memberof asyncArray\n * @example\n// [1, 2, 3, 4]\nconst arr1: number[] = syncArray([1, 2, 3, 4]);\n// Promise => [1, 2, 3, 4]\nconst arr2: Promise<number[]> = syncArray([1, Promise.resolve(2), 3, 4]);\n */\nexport function syncArray<T extends any[]>(arr: T) {\n  return takeArrayF(Infinity, arr);\n}\n\n/**\n * @memberof asyncArray\n */\nexport function reduceAsyncArrayF<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  initial: T,\n  iterator: U,\n): AsyncArrayReturnType<U, T>;\n/**\n * @memberof asyncArray\n */\nexport function reduceAsyncArrayF<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  initial: T,\n  arr: U): T | Promise<T> {\n  return exec(arr2 => reduceArrayF(callbackFn, initial, arr2), syncArray(arr));\n}\n\nexport type Curry2ReduceAsyncArrayType<T, U extends any[]> =\n  (<R extends U>(initial: T, arr: R) => AsyncArrayReturnType<R, T>) &\n  ((initial: T) => <R extends U>(arr: R) => AsyncArrayReturnType<R, T>);\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const reduceAsyncArray:\n(<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  ) => Curry2ReduceAsyncArrayType<T, U>) &\n  (<T, U extends any[]>(\n    callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n    initial: T,\n    arr: U) => AsyncArrayReturnType<U, T>) =\n  /*#__PURE__*/curry(reduceAsyncArrayF);\nexport function eachAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T):\n  AsyncArrayReturnType<T, PureArrayType<T>>;\n\n/**\n * @memberof asyncArray\n */\nexport function eachAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T) {\n  return exec(arr2 => eachArrayF(callbackFn, arr2), syncArray(arr));\n}\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const eachAsyncArray:\n  (<T extends any[]>(callbackFn: EachAsyncArrayCallbackType<T, void>) =>\n    <U extends T>(arr: U) => AsyncArrayReturnType<U, PureArrayType<U>>) &\n  (<T extends any[]>(callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T) =>\n    AsyncArrayReturnType<T, PureArrayType<T>>) =\n  /*#__PURE__*/curry(eachAsyncArrayF);\n\nexport function mapAsyncArrayF<T extends any[], U>(\n  callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T):\n  AsyncArrayReturnType<T, U[]>;\n/**\n * @memberof asyncArray\n */\nexport function mapAsyncArrayF<T extends any[], U>(\n  callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T) {\n  return exec(arr2 => mapArrayF(callbackFn, arr2), syncArray(arr));\n}\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const mapAsyncArray:\n  (<T extends any[], U>(callbackFn: EachAsyncArrayCallbackType<T, U>) =>\n    <A extends T, B extends U>(arr: A) => AsyncArrayReturnType<A, B[]>) &\n  (<T extends any[], U>(callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T) =>\n  AsyncArrayReturnType<T, U[]>) =\n  /*#__PURE__*/curry(mapAsyncArrayF);\n\nexport function filterAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, boolean>, arr: T):\n  AsyncArrayReturnType<T, Array<CheckPromiseIterableType<T>>>;\n/**\n * @memberof asyncArray\n */\nexport function filterAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, boolean>, arr: T) {\n  return exec(arr2 => filterArrayF(callbackFn, arr2), syncArray(arr));\n}\n","import { IS_PROMISE, IS_SYMBOL } from \"./consts\";\nimport {\n  Curry1,\n  Curry2CallbackType, Curry2,\n  Curry3CallbackType, Curry3,\n  Curry4CallbackType, Curry4, Func, NoPromise, Curry1CallbackType\n} from \"./types\";\nimport { isFunction, ObjectInterface } from \"@daybrush/utils\";\nimport { reduceAsyncArrayF } from \"./array/asyncArray\";\nimport { CallbackType } from \"./event/event\";\n\n/**\n * @namespace utils\n */\n\n/**\n * @memberof utils\n */\nexport function isPromise<T = any>(value: any): value is Promise<any> {\n  return IS_PROMISE && (value instanceof Promise);\n}\n/**\n * @memberof utils\n */\nexport function isIterable<T = any>(iter: any): iter is Iterable<T> | AsyncIterable<T> {\n  return IS_SYMBOL && !!(iter && (iter[Symbol.iterator] || iter[Symbol.asyncIterator]));\n}\n/**\n * @memberof utils\n */\nexport function isIterator<T = any>(iter: any): iter is Iterator<T> {\n  return iter && isFunction(iter.next);\n}\n\nexport function exec<T, U = T>(f: (pv: T) => U, v: Promise<T>): Promise<U>;\nexport function exec<T, U = T>(f: (pv: T) => U, v: NoPromise<T>): U;\nexport function exec<T, U = T>(f: (pv: T) => U, v: Promise<T> | T): Promise<U> | U;\n\n/**\n * @memberof utils\n */\nexport function exec<T, U = T>(f: (pv: T) => U, v: T | Promise<T>) {\n  return isPromise(v) ? v.then(pv => f(pv)) : f(v);\n}\n\nexport function curry<A>(f: () => A): () => A;\nexport function curry<A, B>(f: Curry1CallbackType<A, B>): Curry1<A, B>;\nexport function curry<A, B, C>(f: Curry2CallbackType<A, B, C>): Curry2<A, B, C>;\nexport function curry<A, B, C, D>(f: Curry3CallbackType<A, B, C, D>): Curry3<A, B, C, D>;\nexport function curry<A, B, C, D, E>(f: Curry4CallbackType<A, B, C, D, E>): Curry4<A, B, C, D, E>;\n/**\n * @memberof utils\n */\nexport function curry(f: CallbackType): any {\n  const length = f.length;\n\n  if (length === 0) {\n    return f;\n  }\n  function nest(i: number, args: any[]) {\n    return (...args2: any[]) => {\n      const length2 = i - args2.length;\n\n      return length2 <= 0 ? f(...args, ...args2) : nest(length2, args.concat(args2));\n    };\n  }\n\n  return nest(length, []);\n}\n\nexport function _pipe(args: Func[]): Func {\n  return (a: any) => {\n    return reduceAsyncArrayF((prev, cur) => cur(prev), a, args);\n  };\n}\n\nexport function pipe<A, B, C, D, E>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>, d: Func<D, E>): Func<A, E>;\nexport function pipe<A, B, C, D>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>): Func<A, D>;\nexport function pipe<A, B, C>(a: Func<A, B>, b: Func<B, C>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function pipe(...args: Func[]): Func {\n  return _pipe(args);\n}\n\nexport function compose<A, B, C, D, E>(a: Func<D, E>, b: Func<C, D>, c: Func<B, C>, d: Func<A, B>): Func<A, E>;\nexport function compose<A, B, C, D>(a: Func<C, D>, b: Func<B, C>, c: Func<A, B>): Func<A, D>;\nexport function compose<A, B, C>(a: Func<B, C>, b: Func<A, B>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function compose(...args: Func[]): Func {\n  return _pipe(args.reverse());\n}\n\nexport function* values<T>(obj: ObjectInterface<T>) {\n  for (const key in obj) {\n    yield obj[key as keyof ObjectInterface<T>];\n  }\n}\n","import { PromiseReturnType,\n  CheckPromiseType, CheckIterableType,\n  CheckPromiseIterableType, Curry2, Curry1 } from \"../types\";\nimport { exec, curry } from \"../utils\";\n\n/**\n* @namespace array\n*/\n/**\n* @memberof array\n* @typedef\n*/\nexport type EachArrayCallbackType<T, U, R extends Array<T | Promise<T>> = T[]> =\n  (value: T, key: number, iterator: R) => U;\n\n/**\n* @memberof array\n* @typedef\n*/\nexport type ReduceArrayCallbackType<T, U, R extends Array<U | Promise<U>> = U[]> =\n  (previousValue: T, currentValue: U, currentIndex: number, arr: R) => T;\n/**\n* @memberof array\n* @typedef\n*/\nexport type ArrayPromiseReturnType<T extends any[]> = CheckPromiseType<\n  CheckIterableType<T>,\n  PromiseReturnType<Array<CheckPromiseIterableType<T>>>,\n  Array<CheckPromiseIterableType<T>>>;\n/**\n * @memberof array\n */\nexport function eachArrayF<T>(f: EachArrayCallbackType<T, void>, arr: T[]): T[] {\n  arr.forEach(f);\n  return arr;\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const eachArray:\n  (<T = any>(f: EachArrayCallbackType<T, void>) => <U extends T>(arr: U[]) => U[]) &\n  (<T = any>(f: EachArrayCallbackType<T, void>, arr: T[]) => T[]) =\n  /*#__PURE__*/curry(eachArrayF);\n\n/**\n * @memberof array\n */\nexport function mapArrayF<T, U>(f: EachArrayCallbackType<T, U>, arr: T[]): U[] {\n  return arr.map(f);\n}\n/**\n * @memberof array\n * @function\n */\nexport const mapArray:\n (<T = any, U = any>(f: EachArrayCallbackType<T, U>) => <A extends T, B extends U>(arr: A[]) => B[]) &\n (<T = any, U = any>(f: EachArrayCallbackType<T, U>, arr: T[]) => U[]) =\n /*#__PURE__*/curry(mapArrayF);\n/**\n * @memberof array\n */\nexport function reduceArrayF<T, U>(\n  callbackFn: ReduceArrayCallbackType<T, U>,\n  initial: T,\n  arr: U[]): T {\n  return arr.reduce(callbackFn, initial);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const reduceArray:\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>) => Curry2<T, U[], T>) &\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>, initial: T) => Curry1<U[], T>) &\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>, initial: T, arr: U[]) => T) =\n  /*#__PURE__*/curry(reduceArrayF);\n\n/**\n * @memberof array\n */\nexport function filterArrayF<T>(f: EachArrayCallbackType<T, boolean>, arr: T[]): T[] {\n  return arr.filter(f);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const filterArray:\n (<T = any>(f: EachArrayCallbackType<T, boolean>) => Curry1<T[], T[]>) &\n (<T = any>(f: EachArrayCallbackType<T, boolean>, arr: T[]) => T[]) =\n /*#__PURE__*/ curry(filterArrayF);\n\n/**\n * @memberof array\n */\nexport function headArray<T>(iterator: T[]): T {\n  return iterator[0];\n}\n\n/**\n * @memberof array\n */\nexport function tailArray<T>(iterator: T[]): T {\n  return iterator[iterator.length - 1];\n}\n\nexport function takeArrayF<T extends any[]>(length: number, arr: T):\n  ArrayPromiseReturnType<T>;\n/**\n * @memberof array\n */\nexport function takeArrayF<T extends any[]>(length: number, arr: T) {\n  const arrLength = Math.min(length, arr.length);\n  const arr2 = arr.slice(0, arrLength);\n\n  return reduceArrayF((prev, cur) => {\n    return exec(p => exec(c => {\n      p.push(c);\n      return p;\n    }, cur), prev);\n  }, [] as T | Promise<T>, arr2);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const takeArray:\n(<T extends any[]>(length: number) =>\n  <U extends T>(arr: U) => ArrayPromiseReturnType<U>) &\n (<T extends any[]>(length: number, arr: T) => ArrayPromiseReturnType<T>) =\n /*#__PURE__*/ curry(takeArrayF);\n","import { ObjectInterface } from \"@daybrush/utils\";\nimport { headArray, tailArray, reduceArrayF } from \"../array/array\";\nimport { exec } from \"../utils\";\nimport { CheckPromiseType, CheckObjectType, CheckPromiseObjectType, PromiseReturnType } from \"../types\";\n/**\n * @namespace object\n */\n/**\n * @memberof object\n * @typedef\n */\nexport type EachObjectCallbackType<T, U, R extends ObjectInterface<T | Promise<T>> = ObjectInterface<T>> =\n   (value: T, key: string, obj: R) => U;\n\n/**\n * @memberof object\n * @typedef\n */\nexport type ReduceObjectCallbackType<T, U, R extends ObjectInterface<U | Promise<U>> = ObjectInterface<U>> =\n(previousValue: T, currentValue: U, currentIndex: string, obj: R) => T;\n\n/**\n * @memberof object\n */\nexport function reduceObjectF<T, U = T>(\n  callbackFn: ReduceObjectCallbackType<T, U>,\n  initial: T,\n  obj: ObjectInterface<U>): T {\n  let cur = initial;\n\n  for (const key in obj) {\n    cur = callbackFn(cur, obj[key], key, obj);\n  }\n  return cur;\n}\n\n/**\n * @memberof object\n */\nexport function eachObjectF<T = any>(f: EachObjectCallbackType<T, void>, obj: ObjectInterface<T>):\n  ObjectInterface<T> {\n  for (const key in obj) {\n    f(obj[key], key, obj);\n  }\n  return obj;\n}\n/**\n * @memberof object\n */\nexport function mapObjectF<T = any, U = any>(f: EachObjectCallbackType<T, U>, obj: ObjectInterface<T>):\n  ObjectInterface<U> {\n  const rv: ObjectInterface<U> = {};\n\n  for (const key in obj) {\n    rv[key] = f(obj[key], key, obj);\n  }\n  return rv;\n}\n\n/**\n * @memberof object\n */\nexport function filterObjectF<T = any>(f: EachObjectCallbackType<T, boolean>, obj: ObjectInterface<T>):\n  ObjectInterface<T> {\n  const rv: Partial<ObjectInterface<T>> = {};\n\n  for (const key in obj) {\n    f(obj[key], key, obj) && (rv[key] = obj[key]);\n  }\n  return rv;\n}\n/**\n * @memberof object\n */\nexport function values<T>(obj: ObjectInterface<T>): T[] {\n  return Object.values(obj);\n}\n/**\n * @memberof object\n */\nexport function keys<T extends ObjectInterface<T>>(obj: ObjectInterface<T>): Array<keyof T & string> {\n  return Object.keys(obj);\n}\n/**\n * @memberof object\n */\nexport function headObject<T>(obj: ObjectInterface<T>): T {\n  return headArray(values(obj));\n}\n\n/**\n * @memberof object\n */\nexport function tailObject<T>(obj: ObjectInterface<T>): T {\n  return tailArray(values(obj));\n}\n\nexport function takeObjectF<T extends ObjectInterface<any>>(length: number, obj: T):\n  CheckPromiseType<CheckObjectType<T>,\n  PromiseReturnType<ObjectInterface<CheckPromiseObjectType<T>>>,\n  ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof object\n */\nexport function takeObjectF<T extends ObjectInterface<any>>(length: number, obj: T) {\n  const objkeys = keys(obj);\n  const arrLength = Math.min(length, objkeys.length);\n  const objkeys2 = objkeys.slice(0, arrLength);\n\n  return reduceArrayF((prev, cur) => {\n    return exec(p => exec(c => {\n      p[cur] = obj[cur];\n      return p;\n    }, cur), prev);\n  }, {} as T | Promise<T>, objkeys2);\n}\n","import { ReduceObjectCallbackType, EachObjectCallbackType, filterObjectF, eachObjectF, takeObjectF } from \"./object\";\nimport { CheckPromiseReturnType,\n  CheckObjectType, CheckPromiseObjectType } from \"../types\";\nimport { reduceObjectF, mapObjectF } from \"./object\";\nimport { ObjectInterface } from \"@daybrush/utils\";\nimport { exec } from \"../utils\";\n\n/**\n * @namespace asyncObject\n */\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type ReduceAsyncObjectCallbackType<T, U extends ObjectInterface<any>> =\n  ReduceObjectCallbackType<T, CheckPromiseObjectType<U>, U>;\n\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type EachAsyncObjectCallbackType<T extends ObjectInterface<any>, U> =\n  EachObjectCallbackType<CheckPromiseObjectType<T>, U>;\n\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type AsyncObjectReturnType<T extends ObjectInterface<any>, U> =\n  CheckPromiseReturnType<CheckObjectType<T>, U>;\n\nexport function syncObject<T extends ObjectInterface<any>>(obj: T):\nAsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n * @example\n// {a: 1, b: 2, c: 3 , d: 4}\nconst obj1: ObjectInterface<number> = syncObject({\n    a: 1,\n    b: 2,\n    c: 3,\n    d: 4,\n});\n// Promise => {a: 1, b: 2, c: 3 , d: 4}\nconst obj2: Promise<ObjectInterface<number>> = syncObject({\n    a: 1,\n    b: Promise.resolve(2),\n    c: 3,\n    d: 4,\n});\n */\nexport function syncObject<T extends ObjectInterface<any>>(obj: T) {\n  return takeObjectF(Infinity, obj);\n}\n\n/**\n * @memberof asyncObject\n */\nexport function reduceAsyncObjectF<T, U extends ObjectInterface<any>>(\n  callbackFn: ReduceAsyncObjectCallbackType<T, U>,\n  initial: T,\n  iterator: U,\n): AsyncObjectReturnType<U, T>;\n/**\n * @memberof asyncObject\n */\nexport function reduceAsyncObjectF<T, U extends ObjectInterface<any>>(\n  callbackFn: ReduceAsyncObjectCallbackType<T, U>,\n  initial: T,\n  obj: U): T | Promise<T> {\n  return exec(obj2 => reduceObjectF(callbackFn, initial, obj2), syncObject(obj));\n}\n\nexport function eachAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, void>, obj: T):\n  AsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n */\nexport function eachAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, void>, obj: T) {\n  return exec(obj2 => eachObjectF(callbackFn, obj2), syncObject(obj));\n}\n\nexport function mapAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, U>, obj: T):\n  AsyncObjectReturnType<T, U[]>;\n/**\n * @memberof asyncObject\n */\nexport function mapAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, U>, obj: T) {\n  return exec(obj2 => mapObjectF(callbackFn, obj2), syncObject(obj));\n}\n\nexport function filterAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, boolean>, obj: T):\n  AsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n */\nexport function filterAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, boolean>, obj: T) {\n  return exec(obj2 => filterObjectF(callbackFn, obj2), syncObject(obj));\n}\n","import { CheckPromiseIterableType, CheckPromiseReturnType,\n  CheckIterableType, CheckPromiseType, PromiseReturnType, PureType } from \"../types\";\nimport { isPromise, exec } from \"../utils\";\nimport { AsyncIterableType, AsyncIteratorType } from \"./asyncIterable\";\n\n/**\n * @namespace iterable\n */\n/**\n * @memberof iterable\n * @typedef\n */\nexport type IterableReturnType<T extends Iterable<any>, U> =\n  CheckPromiseReturnType<CheckIterableType<T>, U>;\n\n/**\n * @memberof iterable\n * @typedef\n */\nexport type EachIterableCallbackType<T extends Iterable<any>, U> =\n  (value: CheckPromiseIterableType<T>, iterable: T) => U;\n\n/**\n * @memberof iterable\n * @typedef\n */\nexport type ReduceIterableCallbackType<T, U, R extends Iterable<U | Promise<U>> = Iterable<U>> =\n  (previousValue: T, currentValue: U, iterable: R) => T;\n\nexport function reduceIterableF<T, U extends Iterable<any>>(\n    callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n    initial: T,\n    iterable: U,\n  ): IterableReturnType<U, T>;\n/**\n * @memberof iterable\n */\nexport function reduceIterableF<T, U extends Iterable<any>>(\n    callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n    initial: T,\n    iterable: U,\n  ): Promise<T> | T {\n  let cur: T | Promise<T> = initial;\n\n  for (const value of iterable) {\n    cur = exec(c => exec(v => callbackFn(c, v, iterable), value), cur);\n  }\n  return cur;\n}\n/**\n * @memberof iterable\n */\nexport function eachIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, void>, iterable: T): T {\n  for (const value of iterable) {\n    exec(v => callbackFn(v, iterable), value);\n  }\n  return iterable;\n}\n\nexport function mapIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T):\n    CheckPromiseType<CheckIterableType<T>, Iterable<U | Promise<U>>, Iterable<U>>;\n/**\n * @memberof iterable\n */\nexport function* mapIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T): Iterable<U | Promise<U>> {\n  for (const value of iterable) {\n    yield exec(v => callbackFn(v, iterable), value);\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function* filterIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, boolean>,\n  iterable: T):\n  IterableIterator<CheckPromiseIterableType<T>> {\n  for (const value of iterable) {\n    exec(v => callbackFn(v, iterable), value) && (yield value);\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function headIterable<T>(iterable: Iterable<T>): T {\n  for (const value of iterable) {\n    return value;\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function tailIterable<T>(iterable: Iterable<T>): T {\n  let cur: T;\n  for (const value of iterable) {\n    cur = value;\n  }\n  return cur;\n}\nexport function getIterator<T extends AsyncIterableType<any>>(iterable: T) {\n  return ((iterable as any)[Symbol.asyncIterator] || (iterable as any)[Symbol.asyncIterator])();\n}\n/**\n * @memberof iterable\n */\nexport function takeIterableF<T>(length: number, iterable: AsyncIterableType<T>):\n  PromiseReturnType<Array<PureType<T>>> {\n\n  type t = PureType<T>;\n  const cur: t[] = [];\n\n  if (length === 0) {\n    return cur;\n  }\n  let i = 0;\n\n  function _result(result: IteratorResult<T>, iter: AsyncIteratorType<T>): t[] | Promise<T> {\n    if (result.done || i >= length) {\n      return cur;\n    }\n    ++i;\n    const value = result.value;\n\n    if (isPromise(value)) {\n      return value.then(v => {\n        cur.push(v);\n        return _take(iter);\n      });\n    } else {\n      cur.push(value as any);\n    }\n    return cur;\n  }\n  function _take(iter: AsyncIteratorType<T>): any {\n    const result = iter.next();\n\n    return exec(r => _result(r, iter), result);\n  }\n  return _take(getIterator(iterable));\n}\n","import { EachIterableCallbackType, ReduceIterableCallbackType, takeIterableF } from \"./iterable\";\nimport { CheckPromiseIterableType } from \"../types\";\n/**\n * @namespace asyncIterable\n */\n\n/**\n * @memberof asyncIterable\n * @typedef\n */\nexport type AsyncIterableType<T> = AsyncIterable<T> | Iterable<T>;\n/**\n * @memberof asyncIterable\n * @typedef\n */\nexport type AsyncIteratorType<T> = AsyncIterator<T> | Iterator<T>;\n/**\n * @memberof asyncIterable\n */\nexport async function eachAsyncIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, void>, iterable: T) {\n  for await (const value of iterable) {\n    callbackFn(await value, iterable);\n  }\n  return iterable;\n}\n/**\n * @memberof asyncIterable\n */\nexport async function* mapAsyncIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T) {\n  for await (const value of iterable) {\n    yield callbackFn(await value, iterable);\n  }\n}\n/**\n * @memberof asyncIterable\n */\nexport async function* filterAsyncIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, boolean>, iterable: T) {\n  for await (const value of iterable) {\n    const v = await value;\n\n    callbackFn(v, iterable) && (yield v);\n  }\n}\n/**\n * @memberof asyncIterable\n */\nexport async function reduceAsyncIterableF<T, U extends Iterable<any>>(\n  callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n  initial: T,\n  iterable: U) {\n  let cur = initial;\n\n  for await (const value of iterable) {\n    const v = await value;\n\n    cur = callbackFn(cur, v, iterable);\n  }\n  return cur;\n}\n\n/**\n * @memberof asyncIterable\n */\nexport function syncIterable<T>(iterable: AsyncIterableType<T>) {\n  return takeIterableF(Infinity, iterable);\n}\n"],"names":["IS_PROMISE","Promise","UNDEFINED","syncArray","arr","takeArrayF","Infinity","reduceAsyncArrayF","callbackFn","initial","exec","arr2","reduceArrayF","reduceAsyncArray","curry","eachAsyncArrayF","eachArrayF","eachAsyncArray","mapAsyncArrayF","mapArrayF","mapAsyncArray","isPromise","value","f","v","then","pv","length","nest","i","args","_i","args2","length2","concat","forEach","map","reduce","filterArrayF","filter","headArray","iterator","tailArray","arrLength","Math","min","prev","cur","p","c","push","slice","reduceObjectF","obj","key","eachObjectF","mapObjectF","rv","filterObjectF","values","Object","keys","takeObjectF","objkeys","syncObject","getIterator","iterable","Symbol","asyncIterator","takeIterableF","_take","iter","r","result","done","_result","next","obj2","iterable_1","tslib_1","iterable_2","iterable_3","_b","iterable_4","_c","iterable_5","iterable_6"],"mappings":"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"}
{"version":3,"file":"fjx.min.js","sources":["../src/consts.ts","../src/function.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../src/utils.ts","../src/async.ts","../src/currying.ts"],"sourcesContent":["/**\n * @namespace Consts\n */\n\n/**\n* @memberof Consts\n*/\nexport const IS_SYMBOL = typeof Symbol !== \"undefined\";\n\n/**\n* @memberof Consts\n*/\nexport const IS_PROMISE = typeof Promise !== \"undefined\";\n","import {\n  ReduceIteratorCallbackType,\n  ReduceArrayCallbackType,\n  ReduceObjectCallbackType,\n  EachArrayCalllbackType,\n  EachObjectCalllbackType,\n  EachIteratorCalllbackType,\n} from \"./types\";\nimport { ObjectInterface } from \"@daybrush/utils\";\n\n// reduce\n/**\n * @namespace Functions\n */\n/**\n * @memberof Functions\n */\nexport function reduceArrayF<T, U = T>(\n  callbackFn: ReduceArrayCallbackType<T, U>,\n  initial: T,\n  iterator: U[]): T {\n  return iterator.reduce(callbackFn, initial);\n}\n/**\n * @memberof Functions\n */\nexport function reduceObjectF<T, U = T>(\n  callbackFn: ReduceObjectCallbackType<T, U>,\n  initial: T,\n  iterator: ObjectInterface<U>): T {\n  let cur = initial;\n\n  for (const key in iterator) {\n    cur = callbackFn(cur, iterator[key], key, iterator);\n  }\n  return cur;\n}\n/**\n * @memberof Functions\n */\nexport function reduceIteratorF<T, U = T>(\n  callbackFn: ReduceIteratorCallbackType<T, U>,\n  initial: T,\n  iterator: Iterable<U>): T {\n  let cur = initial;\n\n  for (const value of iterator) {\n    cur = callbackFn(cur, value, iterator);\n  }\n  return cur;\n}\n\n// each\n/**\n * @memberof Functions\n * @returns {} The calling array itself\n */\nexport function eachArrayF<T = any>(f: EachArrayCalllbackType<T, void>, iterator: T[]): T[] {\n  iterator.forEach(f);\n  return iterator;\n}\n/**\n * @memberof Functions\n * @returns {} The calling object itself\n */\nexport function eachObjectF<T = any>(f: EachObjectCalllbackType<T, void>, iterator: ObjectInterface<T>):\n  ObjectInterface<T> {\n  for (const key in iterator) {\n    f(iterator[key], key, iterator);\n  }\n  return iterator;\n}\n/**\n * @memberof Functions\n* @returns {} The calling iterator itself\n */\nexport function eachIteratorF<T = any>(f: EachIteratorCalllbackType<T, void>, iterator: Iterable<T>): Iterable<T> {\n  for (const value of iterator) {\n    f(value, iterator);\n  }\n  return iterator;\n}\n\n// map\n/**\n * @memberof FunctionS\n */\nexport function mapArrayF<T = any, U = any>(f: EachArrayCalllbackType<T, U>, iterator: T[]): U[] {\n  return iterator.map<U>(f);\n}\n/**\n * @memberof Functions\n */\nexport function mapObjectF<T = any, U = any>(f: EachObjectCalllbackType<T, U>, iterator: ObjectInterface<T>):\n  ObjectInterface<U> {\n  const obj: ObjectInterface<U> = {};\n\n  for (const key in iterator) {\n    obj[key] = f(iterator[key], key, iterator);\n  }\n  return obj;\n}\n/**\n * @memberof Functions\n */\nexport function* mapIteratorF<T = any, U = any>(f: EachIteratorCalllbackType<T, U>, iterator: Iterable<T>) {\n  for (const value of iterator) {\n    yield f(value, iterator);\n  }\n}\n\n// filter\n/**\n * @memberof Functions\n */\nexport function filterArrayF<T = any>(f: EachArrayCalllbackType<T, boolean>, iterator: T[]): T[] {\n  return iterator.filter(f);\n}\n/**\n * @memberof Functions\n */\nexport function filterObjectF<T = any>(f: EachObjectCalllbackType<T, boolean>, iterator: ObjectInterface<T>):\n  ObjectInterface<T> {\n  const obj: Partial<ObjectInterface<T>> = {};\n\n  for (const key in iterator) {\n    f(iterator[key], key, iterator) && (obj[key] = iterator[key]);\n  }\n  return obj;\n}\n/**\n * @memberof Functions\n */\nexport function* filterIteratorF<T = any>(f: EachIteratorCalllbackType<T, boolean>, iterator: Iterable<T>):\n  IterableIterator<T> {\n  for (const value of iterator) {\n    f(value, iterator) && (yield value);\n  }\n}\n/**\n * @memberof Functions\n */\nexport function headArray<T>(iterator: T[]): T {\n  return iterator[0];\n}\n/**\n * @memberof Functions\n */\nexport function tailArray<T>(iterator: T[]): T {\n  return iterator[iterator.length - 1];\n}\n/**\n * @memberof Functions\n */\nexport function head<T>(iterator: Iterable<T> | AsyncIterable<T>): T {\n  for (const value of iterator) {\n    return value;\n  }\n}\n/**\n * @memberof Functions\n */\nexport function tail<T>(iterator: Iterable<T>): T {\n  return reduceIteratorF<T>(prev => prev, void 0, iterator);\n}\n","/*\nCopyright (c) 2018 Daybrush\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.4.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (typeof document === UNDEFINED) {\n    return \"\";\n  }\n\n  var styles = (document.body || document.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {string} hex - hex color\n* @return {string} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {String} hex - 3(or 4)-digit hex color\n* @return {String} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {Array} hsl(a) - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {Array} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {String} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {Array} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * @namespace DOM\n */\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param {HTMLElement | HTMLElement[]} elements - elements\n* @param {string[]} properites - the CSS properties\n* @return {object} returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","import { IS_PROMISE, IS_SYMBOL } from \"./consts\";\nimport {\n  Curry1CallbackType, Curry1,\n  Curry2CallbackType, Curry2,\n  Curry3CallbackType, Curry3,\n  Curry4CallbackType, Curry4, CallbackType, Func\n} from \"./types\";\nimport { reduceArrayF } from \"./function\";\nimport { isFunction } from \"@daybrush/utils\";\n\n/**\n * @namespace utils\n */\n\n/**\n * @memberof utils\n */\nexport function isPromise<T = any>(value: any): value is Promise<T> {\n  return IS_PROMISE && (value instanceof Promise);\n}\n/**\n * @memberof utils\n */\nexport function isIterable<T = any>(iter: any): iter is Iterable<T> | AsyncIterable<T> {\n  return IS_SYMBOL && !!(iter && (iter[Symbol.iterator] || iter[Symbol.asyncIterator]));\n}\n/**\n * @memberof utils\n */\nexport function isIterator<T = any>(iter: any): iter is Iterator<T> {\n  return iter && isFunction(iter.next);\n}\n\nexport function curry<A>(f: () => A): () => A;\nexport function curry<A, B>(f: Curry1CallbackType<A, B>): Curry1<A, B>;\nexport function curry<A, B, C>(f: Curry2CallbackType<A, B, C>): Curry2<A, B, C>;\nexport function curry<A, B, C, D>(f: Curry3CallbackType<A, B, C, D>): Curry3<A, B, C, D>;\nexport function curry<A, B, C, D, E>(f: Curry4CallbackType<A, B, C, D, E>): Curry4<A, B, C, D, E>;\n/**\n * @memberof utils\n */\nexport function curry(f: CallbackType): any {\n  const length = f.length;\n\n  if (length === 0) {\n    return f;\n  }\n  function nest(i: number, args: any[]) {\n    return (...args2: any[]) => {\n      const length2 = i - args2.length;\n\n      return length2 <= 0 ? f(...args, ...args2) : nest(length2, args.concat(args2));\n    };\n  }\n\n  return nest(length, []);\n}\n\nexport function _pipe(args: Func[]): Func {\n  return (a: any) => {\n    return reduceArrayF((prev, cur) => cur(prev), a, args);\n  };\n}\n\nexport function pipe<A, B, C, D, E>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>, d: Func<D, E>): Func<A, E>;\nexport function pipe<A, B, C, D>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>): Func<A, D>;\nexport function pipe<A, B, C>(a: Func<A, B>, b: Func<B, C>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function pipe(...args: Func[]): Func {\n  return _pipe(args);\n}\n\nexport function compose<A, B, C, D, E>(a: Func<D, E>, b: Func<C, D>, c: Func<B, C>, d: Func<A, B>): Func<A, E>;\nexport function compose<A, B, C, D>(a: Func<C, D>, b: Func<B, C>, c: Func<A, B>): Func<A, D>;\nexport function compose<A, B, C>(a: Func<B, C>, b: Func<A, B>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function compose(...args: Func[]): Func {\n  return _pipe(args.reverse());\n}\n","import { isPromise } from \"./utils\";\nimport {\n  ReduceIteratorAsyncCallbackType,\n  ReduceArrayAsyncCallbackType,\n  ReduceObjectAsyncCallbackType,\n  EachAsyncArrayCalllbackType,\n  EachAsyncObjectCalllbackType,\n  EachAsyncIteratorCalllbackType,\n} from \"./types\";\nimport { reduceIteratorF, reduceArrayF, reduceObjectF } from \"./function\";\nimport { ObjectInterface } from \"@daybrush/utils\";\n/**\n * @namespace AsyncFunctions\n */\nexport function exec<T, U = T>(v: Promise<T>, f: (pv: T) => U): Promise<U>;\nexport function exec<T, U = T>(v: T, f: (pv: T) => U): U;\nexport function exec<T, U = T>(v: Promise<T> | T, f: (pv: T) => U): Promise<U> | U;\n/**\n * @memberof AsyncFunctions\n */\nexport function exec<T, U = T>(v: T | Promise<T>, f: (pv: T) => U) {\n  return isPromise(v) ? v.then(pv => f(pv)) : f(v);\n}\n// async to await\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncArray<T>(iterator: Array<T | Promise<T>>) {\n  return reduceArrayF<T[] | Promise<T[]>, T | Promise<T>>(async (prev, cur) => {\n    (await prev).push(await cur);\n    return prev;\n  }, [], iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncObject<T>(iterator: ObjectInterface<T | Promise<T>>) {\n  return reduceObjectF<ObjectInterface<T> | Promise<ObjectInterface<T>>, T | Promise<T>>(async (prev, cur, key) => {\n    (await prev)[key] = (await cur);\n    return prev;\n  }, {}, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport function toArray<T = any>(iterator: Iterable<T>) {\n  return Array.from(iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncIterator<T = any>(iterator: Iterable<T>) {\n    return Promise.all(toArray(iterator)).then(list => list[Symbol.iterator]());\n}\n// async reduce\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncReduceArrayF<T, U = T>(\n  callbackFn: ReduceArrayAsyncCallbackType<T, U>,\n  initial: T,\n  iterator: Array<U | Promise<U>>) {\n  return reduceArrayF<T | Promise<T>, U | Promise<U>>(async (prev, cur, index) => {\n    const prev2 = await prev;\n    const cur2 = await cur;\n\n    return callbackFn(prev2, cur2, index, iterator);\n  }, initial, iterator) as Promise<T>;\n}\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncReduceObjectF<T, U = T>(\n  callbackFn: ReduceObjectAsyncCallbackType<T, U>,\n  initial: T,\n  iterator: ObjectInterface<U | Promise<U>>) {\n  return reduceObjectF<T | Promise<T>, U | Promise<U>>(async (prev, cur, key) => {\n    const prev2 = await prev;\n    const cur2 = await cur;\n\n    return callbackFn(prev2, cur2, key, iterator);\n  }, initial, iterator) as Promise<T>;\n}\n/**\n * @memberof AsyncFunctions\n */\nexport function asyncReduceIteratorF<T, U = T>(\n  callbackFn: ReduceIteratorAsyncCallbackType<T, U>,\n  initial: T,\n  iterator: Iterable<U | Promise<U>>) {\n  return reduceIteratorF<T | Promise<T>, U | Promise<U>>(async (prev, cur) => {\n    const prev2 = await prev;\n    const cur2 = await cur;\n\n    return callbackFn(prev2, cur2, iterator);\n  }, initial, iterator) as Promise<T>;\n}\n\n// async each\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncEachArrayF<T = any>(\n  f: EachAsyncArrayCalllbackType<T, void>, iterator: Array<T | Promise<T>>) {\n  return asyncReduceArrayF<T, T>((prev, cur, index) => {\n    f(cur, index, iterator);\n\n    return cur;\n  }, void 0, iterator).then(() => iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncEachObjectF<T = any>(\n  f: EachAsyncObjectCalllbackType<T, void>, iterator: ObjectInterface<T | Promise<T>>) {\n  return asyncReduceObjectF<T, T>((prev, cur, key) => {\n    f(cur, key, iterator);\n\n    return cur;\n  }, void 0, iterator).then(() => iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncEachIteratorF<T = any>(\n  f: EachAsyncIteratorCalllbackType<T, void>, iterator: Iterable<T>) {\n  for (const value of iterator) {\n    f(await value, iterator);\n  }\n  return iterator;\n}\n\n// async map\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncMapArrayF<T = any, U = any>(\n  f: EachAsyncArrayCalllbackType<T, U>, iterator: Array<T | Promise<T>>) {\n  return asyncReduceArrayF<U[], T>((prev, cur, index) => {\n    prev.push(f(cur, index, iterator));\n\n    return prev;\n  }, [], iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncMapObjectF<T = any, U = any>(\n  f: EachAsyncObjectCalllbackType<T, U>, iterator: ObjectInterface<T | Promise<T>>) {\n  return asyncReduceObjectF<ObjectInterface<U>, T>((prev, cur, key) => {\n    prev[key] = f(cur, key, iterator);\n\n    return prev;\n  }, {}, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function* asyncMapIteratorF<T = any, U = any>(\n  f: EachAsyncIteratorCalllbackType<T, U>, iterator: Iterable<T>) {\n  for (const value of iterator) {\n    yield f(await value, iterator);\n  }\n}\n\n// async filter\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncFilterArrayF<T = any>(\n  f: EachAsyncArrayCalllbackType<T, boolean>, iterator: Array<T | Promise<T>>) {\n  return asyncReduceArrayF<T[], T>((prev, cur, index) => {\n    f(cur, index, iterator) && prev.push(cur);\n\n    return prev;\n  }, [], iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function asyncFilterObjectF<T = any>(\n  f: EachAsyncObjectCalllbackType<T, boolean>, iterator: ObjectInterface<T | Promise<T>>) {\n  return asyncReduceObjectF<ObjectInterface<T>, T>((prev, cur, key) => {\n    f(cur, key, iterator) && (prev[key] = cur);\n\n    return prev;\n  }, {}, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\nexport async function* asyncFilterIteratorF<T = any>(\n  f: EachAsyncIteratorCalllbackType<T, boolean | Promise<boolean>>, iterator: Iterable<T>) {\n  for (const value of iterator) {\n    f(await value, iterator) && (yield value);\n  }\n}\n","import {\n  ReduceIteratorCallbackType,\n  ReduceIteratorAsyncCallbackType,\n  Curry1,\n  Curry2,\n  EachArrayCalllbackType,\n  EachObjectCalllbackType,\n  EachIteratorCalllbackType,\n  EachAsyncIteratorCalllbackType,\n  ReduceArrayCallbackType,\n  ReduceObjectCallbackType,\n} from \"./types\";\nimport { curry } from \"./utils\";\nimport {\n  asyncReduceIteratorF, asyncMapIteratorF, asyncEachIteratorF\n} from \"./async\";\nimport {\n  reduceIteratorF,\n  eachArrayF,\n  eachObjectF,\n  eachIteratorF,\n  mapArrayF,\n  mapObjectF,\n  mapIteratorF,\n  reduceArrayF,\n  reduceObjectF,\n  filterArrayF,\n  filterObjectF,\n  filterIteratorF\n} from \"./function\";\nimport { ObjectInterface } from \"@daybrush/utils\";\n/**\n * @namespace Currying\n * @sort 1\n */\n/**\n * @memberof Currying\n * @function\n */\n// currying reduce\nexport const reduceArray:\n  (<T, U = T>(a: ReduceArrayCallbackType<T, U>) => Curry2<U[], T, T>) &\n  (<T, U = T>(a: ReduceArrayCallbackType<T, U>, b: U[]) => Curry1<T, T>) &\n  (<T, U = T>(a: ReduceArrayCallbackType<T, U>, b: U[], c: T) => T) =\n  /*#__PURE__*/curry(reduceArrayF);\n\n/**\n * @memberof Currying\n * @function\n */\nexport const reduceObject:\n  (<T, U = T>(a: ReduceObjectCallbackType<T, U>) => Curry2<ObjectInterface<U>, T, T>) &\n  (<T, U = T>(a: ReduceObjectCallbackType<T, U>, b: ObjectInterface<U>) => Curry1<T, T>) &\n  (<T, U = T>(a: ReduceObjectCallbackType<T, U>, b: ObjectInterface<U>, c: T) => T) =\n  /*#__PURE__*/curry(reduceObjectF);\n\n/**\n * @memberof Currying\n * @function\n */\nexport const reduceIterator:\n  (<T, U = T>(a: ReduceIteratorCallbackType<T, U>) => Curry2<Iterable<U>, T, T>) &\n  (<T, U = T>(a: ReduceIteratorCallbackType<T, U>, b: Iterable<U>) => Curry1<T, T>) &\n  (<T, U = T>(a: ReduceIteratorCallbackType<T, U>, b: Iterable<U>, c: T) => T) =\n  /*#__PURE__*/curry(reduceIteratorF);\n\n// currying each\n/**\n * @memberof Currying\n * @function\n */\nexport const eachArray:\n  (<T = any>(a: EachArrayCalllbackType<T, void>) => Curry1<T[], T[]>) &\n  (<T = any>(a: EachArrayCalllbackType<T, void>, b: T[]) => T[]) =\n  /*#__PURE__*/curry(eachArrayF);\n/**\n * @memberof Currying\n * @function\n */\nexport const eachObject:\n  (<T = any>(a: EachObjectCalllbackType<T, void>) => Curry1<ObjectInterface<T>, ObjectInterface<T>>) &\n  (<T = any>(a: EachObjectCalllbackType<T, void>, b: ObjectInterface<T>) => ObjectInterface<T>) =\n  /*#__PURE__*/curry(eachObjectF);\n/**\n * @memberof Currying\n * @function\n */\nexport const eachIterator:\n  (<T = any>(a: EachIteratorCalllbackType<T, void>) => Curry1<Iterable<T>, Iterable<T>>) &\n  (<T = any>(a: EachIteratorCalllbackType<T, void>, b: Iterable<T>) => Iterable<T>) =\n  /*#__PURE__*/curry(eachIteratorF);\n/**\n * @memberof Currying\n * @function\n */\nexport const mapArray:\n (<T = any, U = any>(a: EachArrayCalllbackType<T, U>) => Curry1<T[], T[]>) &\n (<T = any, U = any>(a: EachArrayCalllbackType<T, U>, b: T[]) => T[]) =\n /*#__PURE__*/curry(mapArrayF);\n/**\n * @memberof Currying\n * @function\n */\nexport const mapObject:\n (<T = any, U = any>(a: EachObjectCalllbackType<T, U>) => Curry1<ObjectInterface<T>, ObjectInterface<T>>) &\n (<T = any, U = any>(a: EachObjectCalllbackType<T, U>, b: ObjectInterface<T>) => ObjectInterface<T>) =\n /*#__PURE__*/curry(mapObjectF);\n/**\n * @memberof Currying\n * @function\n */\nexport const mapIterator:\n (<T = any, U = any>(a: EachIteratorCalllbackType<T, U>) => Curry1<Iterable<T>, IterableIterator<T>>) &\n (<T = any, U = any>(a: EachIteratorCalllbackType<T, U>, b: Iterable<T>) => IterableIterator<T>) =\n /*#__PURE__*/ curry(mapIteratorF);\n/**\n * @memberof Currying\n * @function\n */\nexport const filterArray:\n (<T = any>(a: EachArrayCalllbackType<T, boolean>) => Curry1<T[], T[]>) &\n (<T = any>(a: EachArrayCalllbackType<T, boolean>, b: T[]) => T[]) =\n /*#__PURE__*/ curry(filterArrayF);\n/**\n * @memberof Currying\n * @function\n */\nexport const filterObject:\n (<T = any>(a: EachObjectCalllbackType<T, boolean>) => Curry1<ObjectInterface<T>, ObjectInterface<T>>) &\n (<T = any>(a: EachObjectCalllbackType<T, boolean>, b: ObjectInterface<T>) => ObjectInterface<T>) =\n /*#__PURE__*/ curry(filterObjectF);\n/**\n * @memberof Currying\n * @function\n */\nexport const filterIterator:\n (<T = any>(a: EachIteratorCalllbackType<T, boolean>) => Curry1<Iterable<T>, IterableIterator<T>>) &\n (<T = any>(a: EachIteratorCalllbackType<T, boolean>, b: Iterable<T>) => IterableIterator<T>) =\n /*#__PURE__*/ curry(filterIteratorF);\n\n// currying async each\n/**\n * @memberof Currying\n * @function\n */\nexport const asyncEachIterator:\n  (<T = any>(a: EachAsyncIteratorCalllbackType<T, void>) => Curry1<Iterable<T>, Promise<Iterable<T>>>) &\n  (<T = any>(a: EachAsyncIteratorCalllbackType<T, void>, b: Iterable<T>) => Promise<Iterable<T>>) =\n  /*#__PURE__*/ curry(asyncEachIteratorF);\n/**\n * @memberof Currying\n * @function\n */\nexport const asyncReduceIterator:\n (<T, U = T>(a: ReduceIteratorAsyncCallbackType<T, U>, b: Iterable<U | Promise<U>>, c: T) => Promise<T>) &\n (<T, U = T>(a: ReduceIteratorAsyncCallbackType<T, U>, b: Iterable<U | Promise<U>>) => Curry1<T, Promise<T>>) &\n (<T, U = T>(a: ReduceIteratorAsyncCallbackType<T, U>) => Curry2<Iterable<U | Promise<U>>, T, Promise<T>>) =\n  /*#__PURE__*/ curry(asyncReduceIteratorF);\n/**\n * @memberof Currying\n * @function\n * @param {} callbackFn - Function that produces an element of the new Iterator.\n * @param {} [iterator] - The iterator to call this function.\n * @example\nasyncMapIterator(v => console.log(v), [fetch(\"https://daybrush.com\").then(res => res.json()), 1, 2, 3]);\n\n// curry\nconst func = asyncMapIterator(v => console.log(v));\n\nfunc([fetch(\"https://daybrush.com\").then(res => res.json()), 1, 2, 3])\n */\nexport const asyncMapIterator:\n  (<T = any, U = any>(a: EachAsyncIteratorCalllbackType<T, U>) => Curry1<Iterable<T>, AsyncIterableIterator<T>>) &\n  (<T = any, U = any>(a: EachAsyncIteratorCalllbackType<T, U>, b: Iterable<T>) => AsyncIterableIterator<T>) =\n  /*#__PURE__*/ curry(asyncMapIteratorF);\n"],"names":["IS_SYMBOL","Symbol","IS_PROMISE","Promise","reduceArrayF","callbackFn","initial","iterator","reduce","reduceObjectF","cur","key","reduceIteratorF","iterator_1","tslib_1","eachArrayF","f","forEach","eachObjectF","eachIteratorF","iterator_2","mapArrayF","map","mapObjectF","obj","mapIteratorF","iterator_3","value","_b","filterArrayF","filter","filterObjectF","filterIteratorF","iterator_4","_c","FUNCTION","UNDEFINED","isPromise","curry","length","nest","i","args","_i","args2","length2","concat","_pipe","a","prev","toArray","Array","from","asyncReduceArrayF","index","prev2","_a","cur2","asyncReduceObjectF","asyncReduceIteratorF","asyncEachIteratorF","asyncMapIteratorF","iterator_5","v","then","pv","push","all","list","_d","iter","asyncIterator","next","reverse"],"mappings":"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"}
{"version":3,"file":"fjx.esm.js","sources":["../src/consts.ts","../src/array/asyncArray.ts","../src/utils.ts","../src/array/array.ts","../src/object/object.ts","../src/object/asyncObject.ts","../src/iterable/iterable.ts","../src/iterable/asyncIterable.ts"],"sourcesContent":["/**\n * @namespace Consts\n */\n\n/**\n* @memberof Consts\n*/\nexport const IS_SYMBOL = typeof Symbol !== \"undefined\";\n\n/**\n* @memberof Consts\n*/\nexport const IS_PROMISE = typeof Promise !== \"undefined\";\n\n/**\n* @memberof Consts\n*/\nexport const nop = Symbol(\"nop\");\n","import { ReduceArrayCallbackType, EachArrayCallbackType, filterArrayF, eachArrayF, takeArrayF } from \"./array\";\nimport { CheckPromiseIterableType, CheckPromiseReturnType, CheckIterableType} from \"../types\";\nimport { reduceArrayF, mapArrayF } from \"./array\";\nimport { exec, curry } from \"../utils\";\n\n/**\n * @namespace asyncArray\n */\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type ReduceAsyncArrayCallbackType<T, U extends any[]> =\n  ReduceArrayCallbackType<T, CheckPromiseIterableType<U>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type EachAsyncArrayCallbackType<T extends any[], U> =\n  EachArrayCallbackType<CheckPromiseIterableType<T>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type AsyncArrayReturnType<T extends any[], U> =\n  CheckPromiseReturnType<CheckIterableType<T>, U>;\n\n/**\n * @memberof asyncArray\n * @typedef\n */\nexport type PureArrayType<T extends any[]> =\n  Array<CheckPromiseIterableType<T>>;\n\nexport function syncArray<T extends any[]>(arr: T):\n  AsyncArrayReturnType<T, PureArrayType<T>>;\n/**\n * @memberof asyncArray\n * @example\n// [1, 2, 3, 4]\nconst arr1: number[] = syncArray([1, 2, 3, 4]);\n// Promise => [1, 2, 3, 4]\nconst arr2: Promise<number[]> = syncArray([1, Promise.resolve(2), 3, 4]);\n */\nexport function syncArray<T extends any[]>(arr: T) {\n  return takeArrayF(Infinity, arr);\n}\n\n/**\n * @memberof asyncArray\n */\nexport function reduceAsyncArrayF<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  initial: T,\n  iterator: U,\n): AsyncArrayReturnType<U, T>;\n/**\n * @memberof asyncArray\n */\nexport function reduceAsyncArrayF<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  initial: T,\n  arr: U): T | Promise<T> {\n  return exec(arr2 => reduceArrayF(callbackFn, initial, arr2), syncArray(arr));\n}\n\nexport type Curry2ReduceAsyncArrayType<T, U extends any[]> =\n  (<R extends U>(initial: T, arr: R) => AsyncArrayReturnType<R, T>) &\n  ((initial: T) => <R extends U>(arr: R) => AsyncArrayReturnType<R, T>);\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const reduceAsyncArray:\n(<T, U extends any[]>(\n  callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n  ) => Curry2ReduceAsyncArrayType<T, U>) &\n  (<T, U extends any[]>(\n    callbackFn: ReduceAsyncArrayCallbackType<T, U>,\n    initial: T,\n    arr: U) => AsyncArrayReturnType<U, T>) =\n  /*#__PURE__*/curry(reduceAsyncArrayF);\nexport function eachAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T):\n  AsyncArrayReturnType<T, PureArrayType<T>>;\n\n/**\n * @memberof asyncArray\n */\nexport function eachAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T) {\n  return exec(arr2 => eachArrayF(callbackFn, arr2), syncArray(arr));\n}\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const eachAsyncArray:\n  (<T extends any[]>(callbackFn: EachAsyncArrayCallbackType<T, void>) =>\n    <U extends T>(arr: U) => AsyncArrayReturnType<U, PureArrayType<U>>) &\n  (<T extends any[]>(callbackFn: EachAsyncArrayCallbackType<T, void>, arr: T) =>\n    AsyncArrayReturnType<T, PureArrayType<T>>) =\n  /*#__PURE__*/curry(eachAsyncArrayF);\n\nexport function mapAsyncArrayF<T extends any[], U>(\n  callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T):\n  AsyncArrayReturnType<T, U[]>;\n/**\n * @memberof asyncArray\n */\nexport function mapAsyncArrayF<T extends any[], U>(\n  callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T) {\n  return exec(arr2 => mapArrayF(callbackFn, arr2), syncArray(arr));\n}\n\n/**\n * @memberof asyncArray\n * @function\n */\nexport const mapAsyncArray:\n  (<T extends any[], U>(callbackFn: EachAsyncArrayCallbackType<T, U>) =>\n    <A extends T, B extends U>(arr: A) => AsyncArrayReturnType<A, B[]>) &\n  (<T extends any[], U>(callbackFn: EachAsyncArrayCallbackType<T, U>, arr: T) =>\n  AsyncArrayReturnType<T, U[]>) =\n  /*#__PURE__*/curry(mapAsyncArrayF);\n\nexport function filterAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, boolean>, arr: T):\n  AsyncArrayReturnType<T, Array<CheckPromiseIterableType<T>>>;\n/**\n * @memberof asyncArray\n */\nexport function filterAsyncArrayF<T extends any[]>(\n  callbackFn: EachAsyncArrayCallbackType<T, boolean>, arr: T) {\n  return exec(arr2 => filterArrayF(callbackFn, arr2), syncArray(arr));\n}\n","import { IS_PROMISE, IS_SYMBOL } from \"./consts\";\nimport {\n  Curry1,\n  Curry2CallbackType, Curry2,\n  Curry3CallbackType, Curry3,\n  Curry4CallbackType, Curry4, Func, NoPromise, Curry1CallbackType\n} from \"./types\";\nimport { isFunction, ObjectInterface } from \"@daybrush/utils\";\nimport { reduceAsyncArrayF } from \"./array/asyncArray\";\nimport { CallbackType } from \"./event/event\";\n\n/**\n * @namespace utils\n */\n\n/**\n * @memberof utils\n */\nexport function isPromise<T = any>(value: any): value is Promise<any> {\n  return IS_PROMISE && (value instanceof Promise);\n}\n/**\n * @memberof utils\n */\nexport function isIterable<T = any>(iter: any): iter is Iterable<T> | AsyncIterable<T> {\n  return IS_SYMBOL && !!(iter && (iter[Symbol.iterator] || iter[Symbol.asyncIterator]));\n}\n/**\n * @memberof utils\n */\nexport function isIterator<T = any>(iter: any): iter is Iterator<T> {\n  return iter && isFunction(iter.next);\n}\n\nexport function exec<T, U = T>(f: (pv: T) => U, v: Promise<T>): Promise<U>;\nexport function exec<T, U = T>(f: (pv: T) => U, v: NoPromise<T>): U;\nexport function exec<T, U = T>(f: (pv: T) => U, v: Promise<T> | T): Promise<U> | U;\n\n/**\n * @memberof utils\n */\nexport function exec<T, U = T>(f: (pv: T) => U, v: T | Promise<T>) {\n  return isPromise(v) ? v.then(pv => f(pv)) : f(v);\n}\n\nexport function curry<A>(f: () => A): () => A;\nexport function curry<A, B>(f: Curry1CallbackType<A, B>): Curry1<A, B>;\nexport function curry<A, B, C>(f: Curry2CallbackType<A, B, C>): Curry2<A, B, C>;\nexport function curry<A, B, C, D>(f: Curry3CallbackType<A, B, C, D>): Curry3<A, B, C, D>;\nexport function curry<A, B, C, D, E>(f: Curry4CallbackType<A, B, C, D, E>): Curry4<A, B, C, D, E>;\n/**\n * @memberof utils\n */\nexport function curry(f: CallbackType): any {\n  const length = f.length;\n\n  if (length === 0) {\n    return f;\n  }\n  function nest(i: number, args: any[]) {\n    return (...args2: any[]) => {\n      const length2 = i - args2.length;\n\n      return length2 <= 0 ? f(...args, ...args2) : nest(length2, args.concat(args2));\n    };\n  }\n\n  return nest(length, []);\n}\n\nexport function _pipe(args: Func[]): Func {\n  return (a: any) => {\n    return reduceAsyncArrayF((prev, cur) => cur(prev), a, args);\n  };\n}\n\nexport function pipe<A, B, C, D, E>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>, d: Func<D, E>): Func<A, E>;\nexport function pipe<A, B, C, D>(a: Func<A, B>, b: Func<B, C>, c: Func<C, D>): Func<A, D>;\nexport function pipe<A, B, C>(a: Func<A, B>, b: Func<B, C>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function pipe(...args: Func[]): Func {\n  return _pipe(args);\n}\n\nexport function compose<A, B, C, D, E>(a: Func<D, E>, b: Func<C, D>, c: Func<B, C>, d: Func<A, B>): Func<A, E>;\nexport function compose<A, B, C, D>(a: Func<C, D>, b: Func<B, C>, c: Func<A, B>): Func<A, D>;\nexport function compose<A, B, C>(a: Func<B, C>, b: Func<A, B>): Func<A, C>;\n/**\n * @memberof utils\n */\nexport function compose(...args: Func[]): Func {\n  return _pipe(args.reverse());\n}\n\nexport function* values<T>(obj: ObjectInterface<T>) {\n  for (const key in obj) {\n    yield obj[key as keyof ObjectInterface<T>];\n  }\n}\n","import { PromiseReturnType,\n  CheckPromiseType, CheckIterableType,\n  CheckPromiseIterableType, Curry2, Curry1 } from \"../types\";\nimport { exec, curry } from \"../utils\";\n\n/**\n* @namespace array\n*/\n/**\n* @memberof array\n* @typedef\n*/\nexport type EachArrayCallbackType<T, U, R extends Array<T | Promise<T>> = T[]> =\n  (value: T, key: number, iterator: R) => U;\n\n/**\n* @memberof array\n* @typedef\n*/\nexport type ReduceArrayCallbackType<T, U, R extends Array<U | Promise<U>> = U[]> =\n  (previousValue: T, currentValue: U, currentIndex: number, arr: R) => T;\n/**\n* @memberof array\n* @typedef\n*/\nexport type ArrayPromiseReturnType<T extends any[]> = CheckPromiseType<\n  CheckIterableType<T>,\n  PromiseReturnType<Array<CheckPromiseIterableType<T>>>,\n  Array<CheckPromiseIterableType<T>>>;\n/**\n * @memberof array\n */\nexport function eachArrayF<T>(f: EachArrayCallbackType<T, void>, arr: T[]): T[] {\n  arr.forEach(f);\n  return arr;\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const eachArray:\n  (<T = any>(f: EachArrayCallbackType<T, void>) => <U extends T>(arr: U[]) => U[]) &\n  (<T = any>(f: EachArrayCallbackType<T, void>, arr: T[]) => T[]) =\n  /*#__PURE__*/curry(eachArrayF);\n\n/**\n * @memberof array\n */\nexport function mapArrayF<T, U>(f: EachArrayCallbackType<T, U>, arr: T[]): U[] {\n  return arr.map(f);\n}\n/**\n * @memberof array\n * @function\n */\nexport const mapArray:\n (<T = any, U = any>(f: EachArrayCallbackType<T, U>) => <A extends T, B extends U>(arr: A[]) => B[]) &\n (<T = any, U = any>(f: EachArrayCallbackType<T, U>, arr: T[]) => U[]) =\n /*#__PURE__*/curry(mapArrayF);\n/**\n * @memberof array\n */\nexport function reduceArrayF<T, U>(\n  callbackFn: ReduceArrayCallbackType<T, U>,\n  initial: T,\n  arr: U[]): T {\n  return arr.reduce(callbackFn, initial);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const reduceArray:\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>) => Curry2<T, U[], T>) &\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>, initial: T) => Curry1<U[], T>) &\n  (<T, U>(callbackFn: ReduceArrayCallbackType<T, U>, initial: T, arr: U[]) => T) =\n  /*#__PURE__*/curry(reduceArrayF);\n\n/**\n * @memberof array\n */\nexport function filterArrayF<T>(f: EachArrayCallbackType<T, boolean>, arr: T[]): T[] {\n  return arr.filter(f);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const filterArray:\n (<T = any>(f: EachArrayCallbackType<T, boolean>) => Curry1<T[], T[]>) &\n (<T = any>(f: EachArrayCallbackType<T, boolean>, arr: T[]) => T[]) =\n /*#__PURE__*/ curry(filterArrayF);\n\n/**\n * @memberof array\n */\nexport function headArray<T>(iterator: T[]): T {\n  return iterator[0];\n}\n\n/**\n * @memberof array\n */\nexport function tailArray<T>(iterator: T[]): T {\n  return iterator[iterator.length - 1];\n}\n\nexport function takeArrayF<T extends any[]>(length: number, arr: T):\n  ArrayPromiseReturnType<T>;\n/**\n * @memberof array\n */\nexport function takeArrayF<T extends any[]>(length: number, arr: T) {\n  const arrLength = Math.min(length, arr.length);\n  const arr2 = arr.slice(0, arrLength);\n\n  return reduceArrayF((prev, cur) => {\n    return exec(p => exec(c => {\n      p.push(c);\n      return p;\n    }, cur), prev);\n  }, [] as T | Promise<T>, arr2);\n}\n\n/**\n * @memberof array\n * @function\n */\nexport const takeArray:\n(<T extends any[]>(length: number) =>\n  <U extends T>(arr: U) => ArrayPromiseReturnType<U>) &\n (<T extends any[]>(length: number, arr: T) => ArrayPromiseReturnType<T>) =\n /*#__PURE__*/ curry(takeArrayF);\n","import { ObjectInterface } from \"@daybrush/utils\";\nimport { headArray, tailArray, reduceArrayF } from \"../array/array\";\nimport { exec } from \"../utils\";\nimport { CheckPromiseType, CheckObjectType, CheckPromiseObjectType, PromiseReturnType } from \"../types\";\n/**\n * @namespace object\n */\n/**\n * @memberof object\n * @typedef\n */\nexport type EachObjectCallbackType<T, U, R extends ObjectInterface<T | Promise<T>> = ObjectInterface<T>> =\n   (value: T, key: string, obj: R) => U;\n\n/**\n * @memberof object\n * @typedef\n */\nexport type ReduceObjectCallbackType<T, U, R extends ObjectInterface<U | Promise<U>> = ObjectInterface<U>> =\n(previousValue: T, currentValue: U, currentIndex: string, obj: R) => T;\n\n/**\n * @memberof object\n */\nexport function reduceObjectF<T, U = T>(\n  callbackFn: ReduceObjectCallbackType<T, U>,\n  initial: T,\n  obj: ObjectInterface<U>): T {\n  let cur = initial;\n\n  for (const key in obj) {\n    cur = callbackFn(cur, obj[key], key, obj);\n  }\n  return cur;\n}\n\n/**\n * @memberof object\n */\nexport function eachObjectF<T = any>(f: EachObjectCallbackType<T, void>, obj: ObjectInterface<T>):\n  ObjectInterface<T> {\n  for (const key in obj) {\n    f(obj[key], key, obj);\n  }\n  return obj;\n}\n/**\n * @memberof object\n */\nexport function mapObjectF<T = any, U = any>(f: EachObjectCallbackType<T, U>, obj: ObjectInterface<T>):\n  ObjectInterface<U> {\n  const rv: ObjectInterface<U> = {};\n\n  for (const key in obj) {\n    rv[key] = f(obj[key], key, obj);\n  }\n  return rv;\n}\n\n/**\n * @memberof object\n */\nexport function filterObjectF<T = any>(f: EachObjectCallbackType<T, boolean>, obj: ObjectInterface<T>):\n  ObjectInterface<T> {\n  const rv: Partial<ObjectInterface<T>> = {};\n\n  for (const key in obj) {\n    f(obj[key], key, obj) && (rv[key] = obj[key]);\n  }\n  return rv;\n}\n/**\n * @memberof object\n */\nexport function values<T>(obj: ObjectInterface<T>): T[] {\n  return Object.values(obj);\n}\n/**\n * @memberof object\n */\nexport function keys<T extends ObjectInterface<T>>(obj: ObjectInterface<T>): Array<keyof T & string> {\n  return Object.keys(obj);\n}\n/**\n * @memberof object\n */\nexport function headObject<T>(obj: ObjectInterface<T>): T {\n  return headArray(values(obj));\n}\n\n/**\n * @memberof object\n */\nexport function tailObject<T>(obj: ObjectInterface<T>): T {\n  return tailArray(values(obj));\n}\n\nexport function takeObjectF<T extends ObjectInterface<any>>(length: number, obj: T):\n  CheckPromiseType<CheckObjectType<T>,\n  PromiseReturnType<ObjectInterface<CheckPromiseObjectType<T>>>,\n  ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof object\n */\nexport function takeObjectF<T extends ObjectInterface<any>>(length: number, obj: T) {\n  const objkeys = keys(obj);\n  const arrLength = Math.min(length, objkeys.length);\n  const objkeys2 = objkeys.slice(0, arrLength);\n\n  return reduceArrayF((prev, cur) => {\n    return exec(p => exec(c => {\n      p[cur] = obj[cur];\n      return p;\n    }, cur), prev);\n  }, {} as T | Promise<T>, objkeys2);\n}\n","import { ReduceObjectCallbackType, EachObjectCallbackType, filterObjectF, eachObjectF, takeObjectF } from \"./object\";\nimport { CheckPromiseReturnType,\n  CheckObjectType, CheckPromiseObjectType } from \"../types\";\nimport { reduceObjectF, mapObjectF } from \"./object\";\nimport { ObjectInterface } from \"@daybrush/utils\";\nimport { exec } from \"../utils\";\n\n/**\n * @namespace asyncObject\n */\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type ReduceAsyncObjectCallbackType<T, U extends ObjectInterface<any>> =\n  ReduceObjectCallbackType<T, CheckPromiseObjectType<U>, U>;\n\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type EachAsyncObjectCallbackType<T extends ObjectInterface<any>, U> =\n  EachObjectCallbackType<CheckPromiseObjectType<T>, U>;\n\n/**\n * @memberof asyncObject\n * @typedef\n */\nexport type AsyncObjectReturnType<T extends ObjectInterface<any>, U> =\n  CheckPromiseReturnType<CheckObjectType<T>, U>;\n\nexport function syncObject<T extends ObjectInterface<any>>(obj: T):\nAsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n * @example\n// {a: 1, b: 2, c: 3 , d: 4}\nconst obj1: ObjectInterface<number> = syncObject({\n    a: 1,\n    b: 2,\n    c: 3,\n    d: 4,\n});\n// Promise => {a: 1, b: 2, c: 3 , d: 4}\nconst obj2: Promise<ObjectInterface<number>> = syncObject({\n    a: 1,\n    b: Promise.resolve(2),\n    c: 3,\n    d: 4,\n});\n */\nexport function syncObject<T extends ObjectInterface<any>>(obj: T) {\n  return takeObjectF(Infinity, obj);\n}\n\n/**\n * @memberof asyncObject\n */\nexport function reduceAsyncObjectF<T, U extends ObjectInterface<any>>(\n  callbackFn: ReduceAsyncObjectCallbackType<T, U>,\n  initial: T,\n  iterator: U,\n): AsyncObjectReturnType<U, T>;\n/**\n * @memberof asyncObject\n */\nexport function reduceAsyncObjectF<T, U extends ObjectInterface<any>>(\n  callbackFn: ReduceAsyncObjectCallbackType<T, U>,\n  initial: T,\n  obj: U): T | Promise<T> {\n  return exec(obj2 => reduceObjectF(callbackFn, initial, obj2), syncObject(obj));\n}\n\nexport function eachAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, void>, obj: T):\n  AsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n */\nexport function eachAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, void>, obj: T) {\n  return exec(obj2 => eachObjectF(callbackFn, obj2), syncObject(obj));\n}\n\nexport function mapAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, U>, obj: T):\n  AsyncObjectReturnType<T, U[]>;\n/**\n * @memberof asyncObject\n */\nexport function mapAsyncObjectF<T extends ObjectInterface<any>, U>(\n  callbackFn: EachAsyncObjectCallbackType<T, U>, obj: T) {\n  return exec(obj2 => mapObjectF(callbackFn, obj2), syncObject(obj));\n}\n\nexport function filterAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, boolean>, obj: T):\n  AsyncObjectReturnType<T, ObjectInterface<CheckPromiseObjectType<T>>>;\n/**\n * @memberof asyncObject\n */\nexport function filterAsyncObjectF<T extends ObjectInterface<any>>(\n  callbackFn: EachAsyncObjectCallbackType<T, boolean>, obj: T) {\n  return exec(obj2 => filterObjectF(callbackFn, obj2), syncObject(obj));\n}\n","import { CheckPromiseIterableType, CheckPromiseReturnType,\n  CheckIterableType, CheckPromiseType, PromiseReturnType, PureType } from \"../types\";\nimport { isPromise, exec } from \"../utils\";\nimport { AsyncIterableType, AsyncIteratorType } from \"./asyncIterable\";\n\n/**\n * @namespace iterable\n */\n/**\n * @memberof iterable\n * @typedef\n */\nexport type IterableReturnType<T extends Iterable<any>, U> =\n  CheckPromiseReturnType<CheckIterableType<T>, U>;\n\n/**\n * @memberof iterable\n * @typedef\n */\nexport type EachIterableCallbackType<T extends Iterable<any>, U> =\n  (value: CheckPromiseIterableType<T>, iterable: T) => U;\n\n/**\n * @memberof iterable\n * @typedef\n */\nexport type ReduceIterableCallbackType<T, U, R extends Iterable<U | Promise<U>> = Iterable<U>> =\n  (previousValue: T, currentValue: U, iterable: R) => T;\n\nexport function reduceIterableF<T, U extends Iterable<any>>(\n    callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n    initial: T,\n    iterable: U,\n  ): IterableReturnType<U, T>;\n/**\n * @memberof iterable\n */\nexport function reduceIterableF<T, U extends Iterable<any>>(\n    callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n    initial: T,\n    iterable: U,\n  ): Promise<T> | T {\n  let cur: T | Promise<T> = initial;\n\n  for (const value of iterable) {\n    cur = exec(c => exec(v => callbackFn(c, v, iterable), value), cur);\n  }\n  return cur;\n}\n/**\n * @memberof iterable\n */\nexport function eachIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, void>, iterable: T): T {\n  for (const value of iterable) {\n    exec(v => callbackFn(v, iterable), value);\n  }\n  return iterable;\n}\n\nexport function mapIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T):\n    CheckPromiseType<CheckIterableType<T>, Iterable<U | Promise<U>>, Iterable<U>>;\n/**\n * @memberof iterable\n */\nexport function* mapIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T): Iterable<U | Promise<U>> {\n  for (const value of iterable) {\n    yield exec(v => callbackFn(v, iterable), value);\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function* filterIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, boolean>,\n  iterable: T):\n  IterableIterator<CheckPromiseIterableType<T>> {\n  for (const value of iterable) {\n    exec(v => callbackFn(v, iterable), value) && (yield value);\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function headIterable<T>(iterable: Iterable<T>): T {\n  for (const value of iterable) {\n    return value;\n  }\n}\n\n/**\n * @memberof iterable\n */\nexport function tailIterable<T>(iterable: Iterable<T>): T {\n  let cur: T;\n  for (const value of iterable) {\n    cur = value;\n  }\n  return cur;\n}\nexport function getIterator<T extends AsyncIterableType<any>>(iterable: T) {\n  return ((iterable as any)[Symbol.asyncIterator] || (iterable as any)[Symbol.asyncIterator])();\n}\n/**\n * @memberof iterable\n */\nexport function takeIterableF<T>(length: number, iterable: AsyncIterableType<T>):\n  PromiseReturnType<Array<PureType<T>>> {\n\n  type t = PureType<T>;\n  const cur: t[] = [];\n\n  if (length === 0) {\n    return cur;\n  }\n  let i = 0;\n\n  function _result(result: IteratorResult<T>, iter: AsyncIteratorType<T>): t[] | Promise<T> {\n    if (result.done || i >= length) {\n      return cur;\n    }\n    ++i;\n    const value = result.value;\n\n    if (isPromise(value)) {\n      return value.then(v => {\n        cur.push(v);\n        return _take(iter);\n      });\n    } else {\n      cur.push(value as any);\n    }\n    return cur;\n  }\n  function _take(iter: AsyncIteratorType<T>): any {\n    const result = iter.next();\n\n    return exec(r => _result(r, iter), result);\n  }\n  return _take(getIterator(iterable));\n}\n","import { EachIterableCallbackType, ReduceIterableCallbackType, takeIterableF } from \"./iterable\";\nimport { CheckPromiseIterableType } from \"../types\";\n/**\n * @namespace asyncIterable\n */\n\n/**\n * @memberof asyncIterable\n * @typedef\n */\nexport type AsyncIterableType<T> = AsyncIterable<T> | Iterable<T>;\n/**\n * @memberof asyncIterable\n * @typedef\n */\nexport type AsyncIteratorType<T> = AsyncIterator<T> | Iterator<T>;\n/**\n * @memberof asyncIterable\n */\nexport async function eachAsyncIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, void>, iterable: T) {\n  for await (const value of iterable) {\n    callbackFn(await value, iterable);\n  }\n  return iterable;\n}\n/**\n * @memberof asyncIterable\n */\nexport async function* mapAsyncIterableF<T extends Iterable<any>, U>(\n  callbackFn: EachIterableCallbackType<T, U>, iterable: T) {\n  for await (const value of iterable) {\n    yield callbackFn(await value, iterable);\n  }\n}\n/**\n * @memberof asyncIterable\n */\nexport async function* filterAsyncIterableF<T extends Iterable<any>>(\n  callbackFn: EachIterableCallbackType<T, boolean>, iterable: T) {\n  for await (const value of iterable) {\n    const v = await value;\n\n    callbackFn(v, iterable) && (yield v);\n  }\n}\n/**\n * @memberof asyncIterable\n */\nexport async function reduceAsyncIterableF<T, U extends Iterable<any>>(\n  callbackFn: ReduceIterableCallbackType<T, CheckPromiseIterableType<U>, U>,\n  initial: T,\n  iterable: U) {\n  let cur = initial;\n\n  for await (const value of iterable) {\n    const v = await value;\n\n    cur = callbackFn(cur, v, iterable);\n  }\n  return cur;\n}\n\n/**\n * @memberof asyncIterable\n */\nexport function syncIterable<T>(iterable: AsyncIterableType<T>) {\n  return takeIterableF(Infinity, iterable);\n}\n"],"names":["IS_PROMISE","Promise","syncArray","arr","takeArrayF","Infinity","reduceAsyncArrayF","callbackFn","initial","exec","arr2","reduceArrayF","reduceAsyncArray","curry","eachAsyncArrayF","eachArrayF","eachAsyncArray","mapAsyncArrayF","mapArrayF","mapAsyncArray","filterAsyncArrayF","filterArrayF","isPromise","value","f","v","then","pv","length","nest","i","args","_i","args2","length2","concat","forEach","eachArray","map","mapArray","reduce","reduceArray","filter","filterArray","headArray","iterator","tailArray","arrLength","Math","min","slice","prev","cur","p","c","push","takeArray","reduceObjectF","obj","key","eachObjectF","mapObjectF","rv","filterObjectF","values","Object","keys","headObject","tailObject","takeObjectF","objkeys","objkeys2","syncObject","reduceAsyncObjectF","obj2","eachAsyncObjectF","mapAsyncObjectF","filterAsyncObjectF","reduceIterableF","iterable","iterable_1","tslib_1","eachIterableF","iterable_2","mapIterableF","iterable_3","_b","filterIterableF","iterable_4","_c","headIterable","iterable_5","tailIterable","iterable_6","getIterator","Symbol","asyncIterator","takeIterableF","_result","result","iter","done","_take","next","r","eachAsyncIterableF","mapAsyncIterableF","filterAsyncIterableF","reduceAsyncIterableF","syncIterable"],"mappings":"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"}